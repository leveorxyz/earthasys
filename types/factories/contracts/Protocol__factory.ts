/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Protocol, ProtocolInterface } from "../../contracts/Protocol";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "reguulatorAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "offsetrerAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OFFSETTER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REGULATORY_AUTHORITY_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_hashedMessage",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
    ],
    name: "VerifySignature",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nftID",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256[]",
            name: "intialAmounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "targetAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct INFT.Pollutant[]",
        name: "pollutantDetails",
        type: "tuple[]",
      },
    ],
    name: "addNewProject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prevNFTID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newNFTID",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256[]",
            name: "intialAmounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "targetAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct INFT.Pollutant[]",
        name: "pollutantDetails",
        type: "tuple[]",
      },
      {
        internalType: "bytes32[]",
        name: "_hashedMessages",
        type: "bytes32[]",
      },
      {
        internalType: "uint8[]",
        name: "_Vs",
        type: "uint8[]",
      },
      {
        internalType: "bytes32[]",
        name: "_Rs",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[]",
        name: "_Ss",
        type: "bytes32[]",
      },
    ],
    name: "instantiateNewProjects",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addressToCheck",
        type: "address",
      },
    ],
    name: "isOffsetter",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addressToCheck",
        type: "address",
      },
    ],
    name: "isRegulator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620015443803806200154483398101604081905262000034916200015f565b62000041600033620000a1565b6200006d7f3d752231ac003ea98acd391737d64fa500fb34598d0df697e925369d62e89f2983620000a1565b620000997f1dda4c4bbf300e26999dabe0e8622d91338bdee37b7324824398816490d02a4082620000a1565b505062000197565b6000828152602081815260408083206001600160a01b038516845290915290205460ff166200013e576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620000fd3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b80516001600160a01b03811681146200015a57600080fd5b919050565b600080604083850312156200017357600080fd5b6200017e8362000142565b91506200018e6020840162000142565b90509250929050565b61139d80620001a76000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806354fc916911610097578063a217fddf11610066578063a217fddf14610240578063c4d66de814610248578063d547741f1461025b578063d7b2d7821461026e57600080fd5b806354fc9169146101dc5780638a9521ba146101ef57806391d1485414610202578063921d7c581461021557600080fd5b8063248a9ca3116100d3578063248a9ca31461016c5780632f2ff15d1461018f57806336568abe146101a25780633c1bfd20146101b557600080fd5b806301ffc9a7146100fa578063045b780214610122578063105833e314610157575b600080fd5b61010d610108366004610af4565b610281565b60405190151581526020015b60405180910390f35b6101497f3d752231ac003ea98acd391737d64fa500fb34598d0df697e925369d62e89f2981565b604051908152602001610119565b61016a610165366004610dce565b6102b8565b005b61014961017a366004610e4c565b60009081526020819052604090206001015490565b61016a61019d366004610e65565b610376565b61016a6101b0366004610e65565b6103a0565b6101497f1dda4c4bbf300e26999dabe0e8622d91338bdee37b7324824398816490d02a4081565b61010d6101ea366004610e91565b61041e565b61010d6101fd366004610e91565b61044a565b61010d610210366004610e65565b610472565b610228610223366004610ebd565b61049b565b6040516001600160a01b039091168152602001610119565b610149600081565b61016a610256366004610e91565b61056d565b61016a610269366004610e65565b6105e3565b61016a61027c366004610f5a565b610608565b60006001600160e01b03198216637965db0b60e01b14806102b257506301ffc9a760e01b6001600160e01b03198316145b92915050565b6102c13361041e565b6103045760405162461bcd60e51b815260206004820152600f60248201526e2737ba1030903932b3bab630ba37b960891b60448201526064015b60405180910390fd5b600154604051630d942c2d60e21b81526101009091046001600160a01b031690633650b0b49061033e9087908790879087906004016111ad565b600060405180830381600087803b15801561035857600080fd5b505af115801561036c573d6000803e3d6000fd5b5050505050505050565b600082815260208190526040902060010154610391816107f7565b61039b8383610804565b505050565b6001600160a01b03811633146104105760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016102fb565b61041a8282610888565b5050565b60006102b27f3d752231ac003ea98acd391737d64fa500fb34598d0df697e925369d62e89f2983610472565b60006102b27f1dda4c4bbf300e26999dabe0e8622d91338bdee37b7324824398816490d02a40835b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6000806040518060400160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152509050600081876040516020016104eb9291906111f1565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff8a169284019290925260608301889052608083018790529092509060019060a0016020604051602081039080840390855afa158015610556573d6000803e3d6000fd5b5050604051601f1901519998505050505050505050565b60015460ff16156105b45760405162461bcd60e51b8152602060048201526011602482015270416c726561647920696e7469616c697a6560781b60448201526064016102fb565b600180546001600160a81b0319166101006001600160a01b03939093169290920260ff19169190911781179055565b6000828152602081905260409020600101546105fe816107f7565b61039b8383610888565b600061067e8560008151811061062057610620611213565b60200260200101518560008151811061063b5761063b611213565b60200260200101518560008151811061065657610656611213565b60200260200101518560008151811061067157610671611213565b602002602001015161049b565b905060006106e98660008151811061069857610698611213565b6020026020010151866000815181106106b3576106b3611213565b6020026020010151866000815181106106ce576106ce611213565b60200260200101518660008151811061067157610671611213565b90506106f48261041e565b6107325760405162461bcd60e51b815260206004820152600f60248201526e2737ba1030903932b3bab630ba37b960891b60448201526064016102fb565b61073b8161044a565b6107795760405162461bcd60e51b815260206004820152600f60248201526e2737ba10309037b33339b2ba3a32b960891b60448201526064016102fb565b600154604051632575476760e11b81526101009091046001600160a01b031690634aea8ece906107b7908f908f908f908f908f908f90600401611229565b600060405180830381600087803b1580156107d157600080fd5b505af11580156107e5573d6000803e3d6000fd5b50505050505050505050505050505050565b61080181336108ed565b50565b61080e8282610472565b61041a576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556108443390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6108928282610472565b1561041a576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6108f78282610472565b61041a5761090f816001600160a01b03166014610951565b61091a836020610951565b60405160200161092b92919061127b565b60408051601f198184030181529082905262461bcd60e51b82526102fb916004016112f0565b60606000610960836002611319565b61096b906002611338565b67ffffffffffffffff81111561098357610983610b3a565b6040519080825280601f01601f1916602001820160405280156109ad576020820181803683370190505b509050600360fc1b816000815181106109c8576109c8611213565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106109f7576109f7611213565b60200101906001600160f81b031916908160001a9053506000610a1b846002611319565b610a26906001611338565b90505b6001811115610a9e576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610a5a57610a5a611213565b1a60f81b828281518110610a7057610a70611213565b60200101906001600160f81b031916908160001a90535060049490941c93610a9781611350565b9050610a29565b508315610aed5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016102fb565b9392505050565b600060208284031215610b0657600080fd5b81356001600160e01b031981168114610aed57600080fd5b80356001600160a01b0381168114610b3557600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715610b7357610b73610b3a565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610ba257610ba2610b3a565b604052919050565b600067ffffffffffffffff831115610bc457610bc4610b3a565b610bd7601f8401601f1916602001610b79565b9050828152838383011115610beb57600080fd5b828260208301376000602084830101529392505050565b600082601f830112610c1357600080fd5b610aed83833560208501610baa565b600067ffffffffffffffff821115610c3c57610c3c610b3a565b5060051b60200190565b600082601f830112610c5757600080fd5b81356020610c6c610c6783610c22565b610b79565b82815260059290921b84018101918181019086841115610c8b57600080fd5b8286015b84811015610ca65780358352918301918301610c8f565b509695505050505050565b600082601f830112610cc257600080fd5b81356020610cd2610c6783610c22565b82815260059290921b84018101918181019086841115610cf157600080fd5b8286015b84811015610ca657803567ffffffffffffffff80821115610d165760008081fd5b908801906060828b03601f1901811315610d305760008081fd5b610d38610b50565b8784013583811115610d4a5760008081fd5b8401603f81018d13610d5c5760008081fd5b6040610d6e8e8b840135838501610baa565b835280860135915084821115610d845760008081fd5b610d928e8b84890101610c46565b838b0152928501359284841115610dab57600091508182fd5b610db98e8b86890101610c46565b90830152508652505050918301918301610cf5565b60008060008060808587031215610de457600080fd5b610ded85610b1e565b935060208501359250604085013567ffffffffffffffff80821115610e1157600080fd5b610e1d88838901610c02565b93506060870135915080821115610e3357600080fd5b50610e4087828801610cb1565b91505092959194509250565b600060208284031215610e5e57600080fd5b5035919050565b60008060408385031215610e7857600080fd5b82359150610e8860208401610b1e565b90509250929050565b600060208284031215610ea357600080fd5b610aed82610b1e565b803560ff81168114610b3557600080fd5b60008060008060808587031215610ed357600080fd5b84359350610ee360208601610eac565b93969395505050506040820135916060013590565b600082601f830112610f0957600080fd5b81356020610f19610c6783610c22565b82815260059290921b84018101918181019086841115610f3857600080fd5b8286015b84811015610ca657610f4d81610eac565b8352918301918301610f3c565b6000806000806000806000806000806101408b8d031215610f7a57600080fd5b8a35995060208b01359850610f9160408c01610b1e565b975060608b0135965060808b013567ffffffffffffffff80821115610fb557600080fd5b610fc18e838f01610c02565b975060a08d0135915080821115610fd757600080fd5b610fe38e838f01610cb1565b965060c08d0135915080821115610ff957600080fd5b6110058e838f01610c46565b955060e08d013591508082111561101b57600080fd5b6110278e838f01610ef8565b94506101008d013591508082111561103e57600080fd5b61104a8e838f01610c46565b93506101208d013591508082111561106157600080fd5b5061106e8d828e01610c46565b9150509295989b9194979a5092959850565b60005b8381101561109b578181015183820152602001611083565b838111156110aa576000848401525b50505050565b600081518084526110c8816020860160208601611080565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b8381101561110c578151875295820195908201906001016110f0565b509495945050505050565b600081518084526020808501808196508360051b8101915082860160005b858110156111a0578284038952815160608151818752611157828801826110b0565b915050868201518682038888015261116f82826110dc565b9150506040808301519250868203818801525061118c81836110dc565b9a87019a9550505090840190600101611135565b5091979650505050505050565b60018060a01b03851681528360208201526080604082015260006111d460808301856110b0565b82810360608401526111e68185611117565b979650505050505050565b60008351611203818460208801611080565b9190910191825250602001919050565b634e487b7160e01b600052603260045260246000fd5b86815285602082015260018060a01b038516604082015283606082015260c06080820152600061125c60c08301856110b0565b82810360a084015261126e8185611117565b9998505050505050505050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516112b3816017850160208801611080565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516112e4816028840160208801611080565b01602801949350505050565b602081526000610aed60208301846110b0565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561133357611333611303565b500290565b6000821982111561134b5761134b611303565b500190565b60008161135f5761135f611303565b50600019019056fea264697066735822122035c58844dce86c8443ed762c16089a835f33f6179988e1bf3cab6aadecf8b92264736f6c634300080f0033";

type ProtocolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProtocolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Protocol__factory extends ContractFactory {
  constructor(...args: ProtocolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    reguulatorAddress: PromiseOrValue<string>,
    offsetrerAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Protocol> {
    return super.deploy(
      reguulatorAddress,
      offsetrerAddress,
      overrides || {}
    ) as Promise<Protocol>;
  }
  override getDeployTransaction(
    reguulatorAddress: PromiseOrValue<string>,
    offsetrerAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      reguulatorAddress,
      offsetrerAddress,
      overrides || {}
    );
  }
  override attach(address: string): Protocol {
    return super.attach(address) as Protocol;
  }
  override connect(signer: Signer): Protocol__factory {
    return super.connect(signer) as Protocol__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProtocolInterface {
    return new utils.Interface(_abi) as ProtocolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Protocol {
    return new Contract(address, _abi, signerOrProvider) as Protocol;
  }
}
