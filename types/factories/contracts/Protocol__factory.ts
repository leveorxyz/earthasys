/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Protocol, ProtocolInterface } from "../../contracts/Protocol";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "reguulatorAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "offsetrerAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OFFSETTER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REGULATORY_AUTHORITY_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_hashedMessage",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
    ],
    name: "VerifySignature",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nftID",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "newPrefix",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "erc20Amount",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "initialAmounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "targetAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct INFT.Pollutant[]",
        name: "pollutantDetails",
        type: "tuple[]",
      },
    ],
    name: "addNewProject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prevNFTID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newNFTID",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "newPrefix",
        type: "string",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "erc20Amount",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "initialAmounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "targetAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct INFT.Pollutant[]",
        name: "pollutantDetails",
        type: "tuple[]",
      },
      {
        internalType: "bytes32[]",
        name: "_hashedMessages",
        type: "bytes32[]",
      },
      {
        internalType: "uint8[]",
        name: "_Vs",
        type: "uint8[]",
      },
      {
        internalType: "bytes32[]",
        name: "_Rs",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[]",
        name: "_Ss",
        type: "bytes32[]",
      },
    ],
    name: "instantiateNewProjects",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addressToCheck",
        type: "address",
      },
    ],
    name: "isOffsetter",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addressToCheck",
        type: "address",
      },
    ],
    name: "isRegulator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620015cd380380620015cd83398101604081905262000034916200015f565b62000041600033620000a1565b6200006d7f3d752231ac003ea98acd391737d64fa500fb34598d0df697e925369d62e89f2983620000a1565b620000997f1dda4c4bbf300e26999dabe0e8622d91338bdee37b7324824398816490d02a4082620000a1565b505062000197565b6000828152602081815260408083206001600160a01b038516845290915290205460ff166200013e576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620000fd3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b80516001600160a01b03811681146200015a57600080fd5b919050565b600080604083850312156200017357600080fd5b6200017e8362000142565b91506200018e6020840162000142565b90509250929050565b61142680620001a76000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806382255fab11610097578063a217fddf11610066578063a217fddf14610240578063c4d66de814610248578063d547741f1461025b578063f42750421461026e57600080fd5b806382255fab146101dc5780638a9521ba146101ef57806391d1485414610202578063921d7c581461021557600080fd5b80632f2ff15d116100d35780632f2ff15d1461017a57806336568abe1461018f5780633c1bfd20146101a257806354fc9169146101c957600080fd5b806301ffc9a7146100fa578063045b780214610122578063248a9ca314610157575b600080fd5b61010d610108366004610b05565b610281565b60405190151581526020015b60405180910390f35b6101497f3d752231ac003ea98acd391737d64fa500fb34598d0df697e925369d62e89f2981565b604051908152602001610119565b610149610165366004610b2f565b60009081526020819052604090206001015490565b61018d610188366004610b64565b6102b8565b005b61018d61019d366004610b64565b6102e2565b6101497f1dda4c4bbf300e26999dabe0e8622d91338bdee37b7324824398816490d02a4081565b61010d6101d7366004610b90565b610365565b61018d6101ea366004610e2d565b610391565b61010d6101fd366004610b90565b61044d565b61010d610210366004610b64565b610475565b610228610223366004610ee1565b61049e565b6040516001600160a01b039091168152602001610119565b610149600081565b61018d610256366004610b90565b610570565b61018d610269366004610b64565b6105e6565b61018d61027c366004610f7e565b61060b565b60006001600160e01b03198216637965db0b60e01b14806102b257506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000828152602081905260409020600101546102d381610808565b6102dd8383610815565b505050565b6001600160a01b03811633146103575760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6103618282610899565b5050565b60006102b27f3d752231ac003ea98acd391737d64fa500fb34598d0df697e925369d62e89f2983610475565b61039a33610365565b6103d85760405162461bcd60e51b815260206004820152600f60248201526e2737ba1030903932b3bab630ba37b960891b604482015260640161034e565b600154604051635e01328560e01b81526101009091046001600160a01b031690635e01328590610414908890889088908890889060040161120a565b600060405180830381600087803b15801561042e57600080fd5b505af1158015610442573d6000803e3d6000fd5b505050505050505050565b60006102b27f1dda4c4bbf300e26999dabe0e8622d91338bdee37b7324824398816490d02a40835b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6000806040518060400160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152509050600081876040516020016104ee929190611263565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff8a169284019290925260608301889052608083018790529092509060019060a0016020604051602081039080840390855afa158015610559573d6000803e3d6000fd5b5050604051601f1901519998505050505050505050565b60015460ff16156105b75760405162461bcd60e51b8152602060048201526011602482015270416c726561647920696e7469616c697a6560781b604482015260640161034e565b600180546001600160a81b0319166101006001600160a01b03939093169290920260ff19169190911781179055565b60008281526020819052604090206001015461060181610808565b6102dd8383610899565b60006106818560008151811061062357610623611285565b60200260200101518560008151811061063e5761063e611285565b60200260200101518560008151811061065957610659611285565b60200260200101518560008151811061067457610674611285565b602002602001015161049e565b905060006106ec8660008151811061069b5761069b611285565b6020026020010151866000815181106106b6576106b6611285565b6020026020010151866000815181106106d1576106d1611285565b60200260200101518660008151811061067457610674611285565b90506106f782610365565b6107355760405162461bcd60e51b815260206004820152600f60248201526e2737ba1030903932b3bab630ba37b960891b604482015260640161034e565b61073e8161044d565b61077c5760405162461bcd60e51b815260206004820152600f60248201526e2737ba10309037b33339b2ba3a32b960891b604482015260640161034e565b60018054906101000a90046001600160a01b03166001600160a01b031663ff4a05bf8e8e8e8e8e8e8e6040518863ffffffff1660e01b81526004016107c7979695949392919061129b565b600060405180830381600087803b1580156107e157600080fd5b505af11580156107f5573d6000803e3d6000fd5b5050505050505050505050505050505050565b61081281336108fe565b50565b61081f8282610475565b610361576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556108553390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6108a38282610475565b15610361576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6109088282610475565b61036157610920816001600160a01b03166014610962565b61092b836020610962565b60405160200161093c929190611304565b60408051601f198184030181529082905262461bcd60e51b825261034e91600401611379565b606060006109718360026113a2565b61097c9060026113c1565b67ffffffffffffffff81111561099457610994610bab565b6040519080825280601f01601f1916602001820160405280156109be576020820181803683370190505b509050600360fc1b816000815181106109d9576109d9611285565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610a0857610a08611285565b60200101906001600160f81b031916908160001a9053506000610a2c8460026113a2565b610a379060016113c1565b90505b6001811115610aaf576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610a6b57610a6b611285565b1a60f81b828281518110610a8157610a81611285565b60200101906001600160f81b031916908160001a90535060049490941c93610aa8816113d9565b9050610a3a565b508315610afe5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161034e565b9392505050565b600060208284031215610b1757600080fd5b81356001600160e01b031981168114610afe57600080fd5b600060208284031215610b4157600080fd5b5035919050565b80356001600160a01b0381168114610b5f57600080fd5b919050565b60008060408385031215610b7757600080fd5b82359150610b8760208401610b48565b90509250929050565b600060208284031215610ba257600080fd5b610afe82610b48565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715610be457610be4610bab565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610c1357610c13610bab565b604052919050565b600082601f830112610c2c57600080fd5b813567ffffffffffffffff811115610c4657610c46610bab565b610c59601f8201601f1916602001610bea565b818152846020838601011115610c6e57600080fd5b816020850160208301376000918101602001919091529392505050565b600067ffffffffffffffff821115610ca557610ca5610bab565b5060051b60200190565b600082601f830112610cc057600080fd5b81356020610cd5610cd083610c8b565b610bea565b82815260059290921b84018101918181019086841115610cf457600080fd5b8286015b84811015610d0f5780358352918301918301610cf8565b509695505050505050565b600082601f830112610d2b57600080fd5b81356020610d3b610cd083610c8b565b82815260059290921b84018101918181019086841115610d5a57600080fd5b8286015b84811015610d0f57803567ffffffffffffffff80821115610d7f5760008081fd5b908801906080828b03601f1901811315610d995760008081fd5b610da1610bc1565b8784013583811115610db35760008081fd5b610dc18d8a83880101610c1b565b8252506040808501358983015260608086013585811115610de25760008081fd5b610df08f8c838a0101610caf565b8484015250928501359284841115610e0a57600091508182fd5b610e188e8b86890101610caf565b90830152508652505050918301918301610d5e565b600080600080600060a08688031215610e4557600080fd5b610e4e86610b48565b945060208601359350604086013567ffffffffffffffff80821115610e7257600080fd5b610e7e89838a01610c1b565b94506060880135915080821115610e9457600080fd5b610ea089838a01610c1b565b93506080880135915080821115610eb657600080fd5b50610ec388828901610d1a565b9150509295509295909350565b803560ff81168114610b5f57600080fd5b60008060008060808587031215610ef757600080fd5b84359350610f0760208601610ed0565b93969395505050506040820135916060013590565b600082601f830112610f2d57600080fd5b81356020610f3d610cd083610c8b565b82815260059290921b84018101918181019086841115610f5c57600080fd5b8286015b84811015610d0f57610f7181610ed0565b8352918301918301610f60565b60008060008060008060008060008060006101608c8e031215610fa057600080fd5b8b359a5060208c0135995067ffffffffffffffff8060408e01351115610fc557600080fd5b610fd58e60408f01358f01610c1b565b9950610fe360608e01610b48565b985060808d013597508060a08e01351115610ffd57600080fd5b61100d8e60a08f01358f01610c1b565b96508060c08e0135111561102057600080fd5b6110308e60c08f01358f01610d1a565b95508060e08e0135111561104357600080fd5b6110538e60e08f01358f01610caf565b9450806101008e0135111561106757600080fd5b6110788e6101008f01358f01610f1c565b9350806101208e0135111561108c57600080fd5b61109d8e6101208f01358f01610caf565b9250806101408e013511156110b157600080fd5b506110c38d6101408e01358e01610caf565b90509295989b509295989b9093969950565b60005b838110156110f05781810151838201526020016110d8565b838111156110ff576000848401525b50505050565b6000815180845261111d8160208601602086016110d5565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b8381101561116157815187529582019590820190600101611145565b509495945050505050565b6000815180845260208085019450848260051b860182860160005b858110156111fd5783830389528151608081518186526111a982870182611105565b9150508682015187860152604080830151868303828801526111cb8382611131565b92505050606080830151925085820381870152506111e98183611131565b9a87019a9450505090840190600101611187565b5090979650505050505050565b60018060a01b038616815284602082015260a06040820152600061123160a0830186611105565b82810360608401526112438186611105565b90508281036080840152611257818561116c565b98975050505050505050565b600083516112758184602088016110d5565b9190910191825250602001919050565b634e487b7160e01b600052603260045260246000fd5b87815286602082015260e0604082015260006112ba60e0830188611105565b6001600160a01b03871660608401526080830186905282810360a08401526112e28186611105565b905082810360c08401526112f6818561116c565b9a9950505050505050505050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161133c8160178501602088016110d5565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161136d8160288401602088016110d5565b01602801949350505050565b602081526000610afe6020830184611105565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156113bc576113bc61138c565b500290565b600082198211156113d4576113d461138c565b500190565b6000816113e8576113e861138c565b50600019019056fea26469706673582212202ebbc7cc85d7e65a6c81b33a2cca5278aa7dfd1f30e933982dd001dd67985d0664736f6c634300080f0033";

type ProtocolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProtocolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Protocol__factory extends ContractFactory {
  constructor(...args: ProtocolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    reguulatorAddress: PromiseOrValue<string>,
    offsetrerAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Protocol> {
    return super.deploy(
      reguulatorAddress,
      offsetrerAddress,
      overrides || {}
    ) as Promise<Protocol>;
  }
  override getDeployTransaction(
    reguulatorAddress: PromiseOrValue<string>,
    offsetrerAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      reguulatorAddress,
      offsetrerAddress,
      overrides || {}
    );
  }
  override attach(address: string): Protocol {
    return super.attach(address) as Protocol;
  }
  override connect(signer: Signer): Protocol__factory {
    return super.connect(signer) as Protocol__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProtocolInterface {
    return new utils.Interface(_abi) as ProtocolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Protocol {
    return new Contract(address, _abi, signerOrProvider) as Protocol;
  }
}
