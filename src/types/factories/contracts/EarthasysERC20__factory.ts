/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  EarthasysERC20,
  EarthasysERC20Interface,
} from "../../contracts/EarthasysERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "ticker",
        type: "string",
      },
      {
        internalType: "string",
        name: "_pollutantName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_unitName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_imageURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getERC20Metadata",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101406040523480156200001257600080fd5b50604051620020013803806200200183398101604081905262000035916200029d565b6040518060400160405280600781526020016626bcaa37b5b2b760c91b81525080604051806040016040528060018152602001603160f81b8152508888816003908162000083919062000415565b50600462000092828262000415565b50506005805460ff1916905550620000aa3362000176565b815160209283012081519183019190912060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818801819052818301969096526060810194909452608080850193909352308483018190528151808603909301835260c0948501909152815191909501209052919091526101205250600862000148858262000415565b50600962000157848262000415565b50600a62000166838262000415565b50600b5550620004e19350505050565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001f857600080fd5b81516001600160401b0380821115620002155762000215620001d0565b604051601f8301601f19908116603f01168101908282118183101715620002405762000240620001d0565b816040528381526020925086838588010111156200025d57600080fd5b600091505b8382101562000281578582018301518183018401529082019062000262565b83821115620002935760008385830101525b9695505050505050565b60008060008060008060c08789031215620002b757600080fd5b86516001600160401b0380821115620002cf57600080fd5b620002dd8a838b01620001e6565b97506020890151915080821115620002f457600080fd5b620003028a838b01620001e6565b965060408901519150808211156200031957600080fd5b620003278a838b01620001e6565b955060608901519150808211156200033e57600080fd5b6200034c8a838b01620001e6565b945060808901519150808211156200036357600080fd5b506200037289828a01620001e6565b92505060a087015190509295509295509295565b600181811c908216806200039b57607f821691505b602082108103620003bc57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200041057600081815260208120601f850160051c81016020861015620003eb5750805b601f850160051c820191505b818110156200040c57828155600101620003f7565b5050505b505050565b81516001600160401b03811115620004315762000431620001d0565b620004498162000442845462000386565b84620003c2565b602080601f831160018114620004815760008415620004685750858301515b600019600386901b1c1916600185901b1785556200040c565b600085815260208120601f198616915b82811015620004b25788860151825594840194600190910190840162000491565b5085821015620004d15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a05160c05160e0516101005161012051611ad0620005316000396000610f9701526000610fe601526000610fc101526000610f1a01526000610f4401526000610f6e0152611ad06000f3fe6080604052600436106101665760003560e01c806379cc6790116100d1578063a0712d681161008a578063d505accf11610064578063d505accf14610416578063d96a094a14610436578063dd62ed3e14610449578063f2fde38b1461046957600080fd5b8063a0712d68146103b6578063a457c2d7146103d6578063a9059cbb146103f657600080fd5b806379cc6790146102f05780637ecebe00146103105780638456cb59146103305780638da5cb5b146103455780638e6491951461037b57806395d89b41146103a157600080fd5b8063395093511161012357806339509351146102365780633f4ba83a1461025657806342966c681461026d5780635c975abb1461028d57806370a08231146102a5578063715018a6146102db57600080fd5b806306fdde031461016b578063095ea7b31461019657806318160ddd146101c657806323b872dd146101e5578063313ce567146102055780633644e51514610221575b600080fd5b34801561017757600080fd5b50610180610489565b60405161018d91906117e7565b60405180910390f35b3480156101a257600080fd5b506101b66101b136600461181d565b61051b565b604051901515815260200161018d565b3480156101d257600080fd5b506002545b60405190815260200161018d565b3480156101f157600080fd5b506101b6610200366004611847565b610533565b34801561021157600080fd5b506040516012815260200161018d565b34801561022d57600080fd5b506101d7610557565b34801561024257600080fd5b506101b661025136600461181d565b610566565b34801561026257600080fd5b5061026b610588565b005b34801561027957600080fd5b5061026b610288366004611883565b61059a565b34801561029957600080fd5b5060055460ff166101b6565b3480156102b157600080fd5b506101d76102c036600461189c565b6001600160a01b031660009081526020819052604090205490565b3480156102e757600080fd5b5061026b6105a7565b3480156102fc57600080fd5b5061026b61030b36600461181d565b6105b9565b34801561031c57600080fd5b506101d761032b36600461189c565b6105d2565b34801561033c57600080fd5b5061026b6105f2565b34801561035157600080fd5b5060055461010090046001600160a01b03166040516001600160a01b03909116815260200161018d565b34801561038757600080fd5b50610390610602565b60405161018d9594939291906118b7565b3480156103ad57600080fd5b506101806107d5565b3480156103c257600080fd5b5061026b6103d1366004611883565b6107e4565b3480156103e257600080fd5b506101b66103f136600461181d565b6107f6565b34801561040257600080fd5b506101b661041136600461181d565b610876565b34801561042257600080fd5b5061026b610431366004611924565b610884565b61026b610444366004611883565b6109e8565b34801561045557600080fd5b506101d7610464366004611997565b610af5565b34801561047557600080fd5b5061026b61048436600461189c565b610b20565b606060038054610498906119ca565b80601f01602080910402602001604051908101604052809291908181526020018280546104c4906119ca565b80156105115780601f106104e657610100808354040283529160200191610511565b820191906000526020600020905b8154815290600101906020018083116104f457829003601f168201915b5050505050905090565b600033610529818585610b96565b5060019392505050565b600033610541858285610cba565b61054c858585610d34565b506001949350505050565b6000610561610f0d565b905090565b6000336105298185856105798383610af5565b6105839190611a14565b610b96565b610590611034565b610598611094565b565b6105a433826110e6565b50565b6105af611034565b6105986000611240565b6105c4823383610cba565b6105ce82826110e6565b5050565b6001600160a01b0381166000908152600660205260408120545b92915050565b6105fa611034565b61059861129a565b6060806060806060610612610489565b61061a6107d5565b60086009600a82805461062c906119ca565b80601f0160208091040260200160405190810160405280929190818152602001828054610658906119ca565b80156106a55780601f1061067a576101008083540402835291602001916106a5565b820191906000526020600020905b81548152906001019060200180831161068857829003601f168201915b505050505092508180546106b8906119ca565b80601f01602080910402602001604051908101604052809291908181526020018280546106e4906119ca565b80156107315780601f1061070657610100808354040283529160200191610731565b820191906000526020600020905b81548152906001019060200180831161071457829003601f168201915b50505050509150808054610744906119ca565b80601f0160208091040260200160405190810160405280929190818152602001828054610770906119ca565b80156107bd5780601f10610792576101008083540402835291602001916107bd565b820191906000526020600020905b8154815290600101906020018083116107a057829003601f168201915b50505050509050945094509450945094509091929394565b606060048054610498906119ca565b6107ec611034565b6105a430826112d7565b600033816108048286610af5565b9050838110156108695760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61054c8286868403610b96565b600033610529818585610d34565b834211156108d45760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610860565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886109038c6113c2565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061095e826113ea565b9050600061096e82878787611438565b9050896001600160a01b0316816001600160a01b0316146109d15760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610860565b6109dc8a8a8a610b96565b50505050505050505050565b600254811115610a2e5760405162461bcd60e51b81526020600482015260116024820152704e6f7420656e6f75676820737570706c7960781b6044820152606401610860565b6000600b5482610a3e9190611a2c565b905034811115610a885760405162461bcd60e51b8152602060048201526015602482015274139bdd08195b9bdd59da081d985b1d59481cd95b9d605a1b6044820152606401610860565b60405163a9059cbb60e01b815233600482015260248101839052309063a9059cbb906044016020604051808303816000875af1158015610acc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af09190611a4b565b505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610b28611034565b6001600160a01b038116610b8d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610860565b6105a481611240565b6001600160a01b038316610bf85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610860565b6001600160a01b038216610c595760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610860565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610cc68484610af5565b90506000198114610d2e5781811015610d215760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610860565b610d2e8484848403610b96565b50505050565b6001600160a01b038316610d985760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610860565b6001600160a01b038216610dfa5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610860565b610e05838383611460565b6001600160a01b03831660009081526020819052604090205481811015610e7d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610860565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610eb4908490611a14565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610f0091815260200190565b60405180910390a3610d2e565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610f6657507f000000000000000000000000000000000000000000000000000000000000000046145b15610f9057507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6005546001600160a01b036101009091041633146105985760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610860565b61109c611468565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b0382166111465760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610860565b61115282600083611460565b6001600160a01b038216600090815260208190526040902054818110156111c65760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610860565b6001600160a01b03831660009081526020819052604081208383039055600280548492906111f5908490611a6d565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6112a26114b1565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586110c93390565b6001600160a01b03821661132d5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610860565b61133960008383611460565b806002600082825461134b9190611a14565b90915550506001600160a01b03821660009081526020819052604081208054839290611378908490611a14565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b03811660009081526006602052604090208054600181018255905b50919050565b60006105ec6113f7610f0d565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000611449878787876114f7565b91509150611456816115e4565b5095945050505050565b610af06114b1565b60055460ff166105985760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610860565b60055460ff16156105985760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610860565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561152e57506000905060036115db565b8460ff16601b1415801561154657508460ff16601c14155b1561155757506000905060046115db565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156115ab573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166115d4576000600192509250506115db565b9150600090505b94509492505050565b60008160048111156115f8576115f8611a84565b036116005750565b600181600481111561161457611614611a84565b036116615760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610860565b600281600481111561167557611675611a84565b036116c25760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610860565b60038160048111156116d6576116d6611a84565b0361172e5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610860565b600481600481111561174257611742611a84565b036105a45760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610860565b6000815180845260005b818110156117c0576020818501810151868301820152016117a4565b818111156117d2576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006117fa602083018461179a565b9392505050565b80356001600160a01b038116811461181857600080fd5b919050565b6000806040838503121561183057600080fd5b61183983611801565b946020939093013593505050565b60008060006060848603121561185c57600080fd5b61186584611801565b925061187360208501611801565b9150604084013590509250925092565b60006020828403121561189557600080fd5b5035919050565b6000602082840312156118ae57600080fd5b6117fa82611801565b60a0815260006118ca60a083018861179a565b82810360208401526118dc818861179a565b905082810360408401526118f0818761179a565b90508281036060840152611904818661179a565b90508281036080840152611918818561179a565b98975050505050505050565b600080600080600080600060e0888a03121561193f57600080fd5b61194888611801565b965061195660208901611801565b95506040880135945060608801359350608088013560ff8116811461197a57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156119aa57600080fd5b6119b383611801565b91506119c160208401611801565b90509250929050565b600181811c908216806119de57607f821691505b6020821081036113e457634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115611a2757611a276119fe565b500190565b6000816000190483118215151615611a4657611a466119fe565b500290565b600060208284031215611a5d57600080fd5b815180151581146117fa57600080fd5b600082821015611a7f57611a7f6119fe565b500390565b634e487b7160e01b600052602160045260246000fdfea26469706673582212201d37bb8d4383eb8a1a23f8e1ce424af7aeeae77e65e86ceaebd58bf1c66f610b64736f6c634300080f0033";

type EarthasysERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EarthasysERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EarthasysERC20__factory extends ContractFactory {
  constructor(...args: EarthasysERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    tokenName: PromiseOrValue<string>,
    ticker: PromiseOrValue<string>,
    _pollutantName: PromiseOrValue<string>,
    _unitName: PromiseOrValue<string>,
    _imageURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EarthasysERC20> {
    return super.deploy(
      tokenName,
      ticker,
      _pollutantName,
      _unitName,
      _imageURI,
      _price,
      overrides || {}
    ) as Promise<EarthasysERC20>;
  }
  override getDeployTransaction(
    tokenName: PromiseOrValue<string>,
    ticker: PromiseOrValue<string>,
    _pollutantName: PromiseOrValue<string>,
    _unitName: PromiseOrValue<string>,
    _imageURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      tokenName,
      ticker,
      _pollutantName,
      _unitName,
      _imageURI,
      _price,
      overrides || {}
    );
  }
  override attach(address: string): EarthasysERC20 {
    return super.attach(address) as EarthasysERC20;
  }
  override connect(signer: Signer): EarthasysERC20__factory {
    return super.connect(signer) as EarthasysERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EarthasysERC20Interface {
    return new utils.Interface(_abi) as EarthasysERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EarthasysERC20 {
    return new Contract(address, _abi, signerOrProvider) as EarthasysERC20;
  }
}
