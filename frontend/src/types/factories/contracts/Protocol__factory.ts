/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Protocol, ProtocolInterface } from "../../contracts/Protocol";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "reguulatorAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "offsetrerAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OFFSETTER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REGULATORY_AUTHORITY_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256[]",
            name: "intialAmounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "targetAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct INFT.Pollutant[]",
        name: "pollutantDetails",
        type: "tuple[]",
      },
    ],
    name: "addNewProject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nftID",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256[]",
            name: "intialAmounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "targetAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct INFT.Pollutant[]",
        name: "pollutantDetails",
        type: "tuple[]",
      },
      {
        internalType: "bytes32[]",
        name: "_hashedMessages",
        type: "bytes32[]",
      },
      {
        internalType: "uint8[]",
        name: "_Vs",
        type: "uint8[]",
      },
      {
        internalType: "bytes32[]",
        name: "_Rs",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[]",
        name: "_Ss",
        type: "bytes32[]",
      },
    ],
    name: "instantiateNewProjects",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addressToCheck",
        type: "address",
      },
    ],
    name: "isOffsetter",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addressToCheck",
        type: "address",
      },
    ],
    name: "isRegulator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620014a9380380620014a983398101604081905262000034916200015f565b62000041600033620000a1565b6200006d7f3d752231ac003ea98acd391737d64fa500fb34598d0df697e925369d62e89f2983620000a1565b620000997f1dda4c4bbf300e26999dabe0e8622d91338bdee37b7324824398816490d02a4082620000a1565b505062000197565b6000828152602081815260408083206001600160a01b038516845290915290205460ff166200013e576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620000fd3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b80516001600160a01b03811681146200015a57600080fd5b919050565b600080604083850312156200017357600080fd5b6200017e8362000142565b91506200018e6020840162000142565b90509250929050565b61130280620001a76000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638a08f43f1161008c57806391d148541161006657806391d148541461020a578063a217fddf1461021d578063c4d66de814610225578063d547741f1461023857600080fd5b80638a08f43f146101d15780638a9521ba146101e45780638ae11856146101f757600080fd5b80632f2ff15d116100c85780632f2ff15d1461016f57806336568abe146101845780633c1bfd201461019757806354fc9169146101be57600080fd5b806301ffc9a7146100ef578063045b780214610117578063248a9ca31461014c575b600080fd5b6101026100fd366004610abc565b61024b565b60405190151581526020015b60405180910390f35b61013e7f3d752231ac003ea98acd391737d64fa500fb34598d0df697e925369d62e89f2981565b60405190815260200161010e565b61013e61015a366004610ae6565b60009081526020819052604090206001015490565b61018261017d366004610b1b565b610282565b005b610182610192366004610b1b565b6102ac565b61013e7f1dda4c4bbf300e26999dabe0e8622d91338bdee37b7324824398816490d02a4081565b6101026101cc366004610b47565b61032f565b6101826101df366004610df6565b61035b565b6101026101f2366004610b47565b610411565b610182610205366004610ed5565b61043d565b610102610218366004610b1b565b610629565b61013e600081565b610182610233366004610b47565b610652565b610182610246366004610b1b565b6106c8565b60006001600160e01b03198216637965db0b60e01b148061027c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60008281526020819052604090206001015461029d816106ed565b6102a783836106fa565b505050565b6001600160a01b03811633146103215760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61032b828261077e565b5050565b600061027c7f3d752231ac003ea98acd391737d64fa500fb34598d0df697e925369d62e89f2983610629565b6103643361032f565b6103a25760405162461bcd60e51b815260206004820152600f60248201526e2737ba1030903932b3bab630ba37b960891b6044820152606401610318565b600154604051632a56598960e01b81526101009091046001600160a01b031690632a565989906103da9086908690869060040161111d565b600060405180830381600087803b1580156103f457600080fd5b505af1158015610408573d6000803e3d6000fd5b50505050505050565b600061027c7f1dda4c4bbf300e26999dabe0e8622d91338bdee37b7324824398816490d02a4083610629565b60006104b3856000815181106104555761045561115d565b6020026020010151856000815181106104705761047061115d565b60200260200101518560008151811061048b5761048b61115d565b6020026020010151856000815181106104a6576104a661115d565b60200260200101516107e3565b9050600061051e866000815181106104cd576104cd61115d565b6020026020010151866000815181106104e8576104e861115d565b6020026020010151866000815181106105035761050361115d565b6020026020010151866000815181106104a6576104a661115d565b90506105298261032f565b6105675760405162461bcd60e51b815260206004820152600f60248201526e2737ba1030903932b3bab630ba37b960891b6044820152606401610318565b61057081610411565b6105ae5760405162461bcd60e51b815260206004820152600f60248201526e2737ba10309037b33339b2ba3a32b960891b6044820152606401610318565b600154604051634793f24b60e11b81526101009091046001600160a01b031690638f27e496906105ea908e908e908e908e908e90600401611173565b600060405180830381600087803b15801561060457600080fd5b505af1158015610618573d6000803e3d6000fd5b505050505050505050505050505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60015460ff16156106995760405162461bcd60e51b8152602060048201526011602482015270416c726561647920696e7469616c697a6560781b6044820152606401610318565b600180546001600160a81b0319166101006001600160a01b03939093169290920260ff19169190911781179055565b6000828152602081905260409020600101546106e3816106ed565b6102a7838361077e565b6106f781336108b5565b50565b6107048282610629565b61032b576000828152602081815260408083206001600160a01b03851684529091529020805460ff1916600117905561073a3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6107888282610629565b1561032b576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000806040518060400160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152509050600081876040516020016108339291906111be565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff8a169284019290925260608301889052608083018790529092509060019060a0016020604051602081039080840390855afa15801561089e573d6000803e3d6000fd5b5050604051601f1901519998505050505050505050565b6108bf8282610629565b61032b576108d7816001600160a01b03166014610919565b6108e2836020610919565b6040516020016108f39291906111e0565b60408051601f198184030181529082905262461bcd60e51b825261031891600401611255565b6060600061092883600261127e565b61093390600261129d565b67ffffffffffffffff81111561094b5761094b610b62565b6040519080825280601f01601f191660200182016040528015610975576020820181803683370190505b509050600360fc1b816000815181106109905761099061115d565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106109bf576109bf61115d565b60200101906001600160f81b031916908160001a90535060006109e384600261127e565b6109ee90600161129d565b90505b6001811115610a66576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610a2257610a2261115d565b1a60f81b828281518110610a3857610a3861115d565b60200101906001600160f81b031916908160001a90535060049490941c93610a5f816112b5565b90506109f1565b508315610ab55760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610318565b9392505050565b600060208284031215610ace57600080fd5b81356001600160e01b031981168114610ab557600080fd5b600060208284031215610af857600080fd5b5035919050565b80356001600160a01b0381168114610b1657600080fd5b919050565b60008060408385031215610b2e57600080fd5b82359150610b3e60208401610aff565b90509250929050565b600060208284031215610b5957600080fd5b610ab582610aff565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715610b9b57610b9b610b62565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610bca57610bca610b62565b604052919050565b600067ffffffffffffffff831115610bec57610bec610b62565b610bff601f8401601f1916602001610ba1565b9050828152838383011115610c1357600080fd5b828260208301376000602084830101529392505050565b600082601f830112610c3b57600080fd5b610ab583833560208501610bd2565b600067ffffffffffffffff821115610c6457610c64610b62565b5060051b60200190565b600082601f830112610c7f57600080fd5b81356020610c94610c8f83610c4a565b610ba1565b82815260059290921b84018101918181019086841115610cb357600080fd5b8286015b84811015610cce5780358352918301918301610cb7565b509695505050505050565b600082601f830112610cea57600080fd5b81356020610cfa610c8f83610c4a565b82815260059290921b84018101918181019086841115610d1957600080fd5b8286015b84811015610cce57803567ffffffffffffffff80821115610d3e5760008081fd5b908801906060828b03601f1901811315610d585760008081fd5b610d60610b78565b8784013583811115610d725760008081fd5b8401603f81018d13610d845760008081fd5b6040610d968e8b840135838501610bd2565b835280860135915084821115610dac5760008081fd5b610dba8e8b84890101610c6e565b838b0152928501359284841115610dd357600091508182fd5b610de18e8b86890101610c6e565b90830152508652505050918301918301610d1d565b600080600060608486031215610e0b57600080fd5b610e1484610aff565b9250602084013567ffffffffffffffff80821115610e3157600080fd5b610e3d87838801610c2a565b93506040860135915080821115610e5357600080fd5b50610e6086828701610cd9565b9150509250925092565b600082601f830112610e7b57600080fd5b81356020610e8b610c8f83610c4a565b82815260059290921b84018101918181019086841115610eaa57600080fd5b8286015b84811015610cce57803560ff81168114610ec85760008081fd5b8352918301918301610eae565b60008060008060008060008060006101208a8c031215610ef457600080fd5b89359850610f0460208b01610aff565b975060408a0135965060608a013567ffffffffffffffff80821115610f2857600080fd5b610f348d838e01610c2a565b975060808c0135915080821115610f4a57600080fd5b610f568d838e01610cd9565b965060a08c0135915080821115610f6c57600080fd5b610f788d838e01610c6e565b955060c08c0135915080821115610f8e57600080fd5b610f9a8d838e01610e6a565b945060e08c0135915080821115610fb057600080fd5b610fbc8d838e01610c6e565b93506101008c0135915080821115610fd357600080fd5b50610fe08c828d01610c6e565b9150509295985092959850929598565b60005b8381101561100b578181015183820152602001610ff3565b8381111561101a576000848401525b50505050565b60008151808452611038816020860160208601610ff0565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b8381101561107c57815187529582019590820190600101611060565b509495945050505050565b600081518084526020808501808196508360051b8101915082860160005b858110156111105782840389528151606081518187526110c782880182611020565b91505086820151868203888801526110df828261104c565b915050604080830151925086820381880152506110fc818361104c565b9a87019a95505050908401906001016110a5565b5091979650505050505050565b6001600160a01b038416815260606020820181905260009061114190830185611020565b82810360408401526111538185611087565b9695505050505050565b634e487b7160e01b600052603260045260246000fd5b85815260018060a01b038516602082015283604082015260a0606082015260006111a060a0830185611020565b82810360808401526111b28185611087565b98975050505050505050565b600083516111d0818460208801610ff0565b9190910191825250602001919050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611218816017850160208801610ff0565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611249816028840160208801610ff0565b01602801949350505050565b602081526000610ab56020830184611020565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561129857611298611268565b500290565b600082198211156112b0576112b0611268565b500190565b6000816112c4576112c4611268565b50600019019056fea2646970667358221220040ac3165cae062550ef863e5c42f9d790b1e96088066569304a96b3f9f10ea264736f6c634300080f0033";

type ProtocolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProtocolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Protocol__factory extends ContractFactory {
  constructor(...args: ProtocolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    reguulatorAddress: PromiseOrValue<string>,
    offsetrerAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Protocol> {
    return super.deploy(
      reguulatorAddress,
      offsetrerAddress,
      overrides || {}
    ) as Promise<Protocol>;
  }
  override getDeployTransaction(
    reguulatorAddress: PromiseOrValue<string>,
    offsetrerAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      reguulatorAddress,
      offsetrerAddress,
      overrides || {}
    );
  }
  override attach(address: string): Protocol {
    return super.attach(address) as Protocol;
  }
  override connect(signer: Signer): Protocol__factory {
    return super.connect(signer) as Protocol__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProtocolInterface {
    return new utils.Interface(_abi) as ProtocolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Protocol {
    return new Contract(address, _abi, signerOrProvider) as Protocol;
  }
}
